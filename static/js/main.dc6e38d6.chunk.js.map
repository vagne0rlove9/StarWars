{"version":3,"sources":["components/Layout/Layout.js","components/Dice/Dice.js","components/Home/Home.js","App.js","registerServiceWorker.js","index.js"],"names":["Layout","Container","this","props","children","Component","displayName","name","Dice","imgPath","color","face","className","src","alt","Home","state","dicesAttack","dicesDefence","handleClikcDiceAttack","event","dices","push","target","id","Math","floor","random","setState","handleClikcDiceDefence","handleClikcDeleteDicesAttack","length","handleClikcDeleteDicesDefence","onClick","map","dice","index","key","App","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","baseUrl","document","getElementsByTagName","getAttribute","rootElement","getElementById","ReactDOM","render","basename","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.dc6e38d6.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Container } from 'reactstrap';\r\n\r\nexport class Layout extends Component {\r\n  static displayName = Layout.name;\r\n\r\n  render () {\r\n    return (\r\n      <div>\r\n        <Container>\r\n          {this.props.children}\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport './Dice.css'\r\n\r\nfunction Dice(props) {\r\n\r\n    const imgPath = \"dices/\" + props.color + props.face + \".png\"\r\n\r\n    return (\r\n        <img className=\"img-dice-rotate\" src={imgPath} alt=\"\"/>\r\n    );\r\n}\r\n\r\n\r\nexport default Dice;","import React, { Component } from 'react';\r\nimport './Home.css'\r\nimport Dice from '../Dice/Dice'\r\n\r\nclass Home extends Component {\r\n\r\n    state = {\r\n        dicesAttack: [],\r\n        dicesDefence: []\r\n    }\r\n\r\n    handleClikcDiceAttack = (event) => {\r\n        var dices = this.state.dicesAttack;\r\n\r\n        dices.push({\r\n            color: event.target.id,\r\n            face: Math.floor(Math.random() * 6) + 1 \r\n        })\r\n\r\n        this.setState({ dicesAttack: dices })\r\n    }\r\n\r\n    handleClikcDiceDefence = (event) => {\r\n        var dices = this.state.dicesDefence;\r\n\r\n        dices.push({\r\n            color: event.target.id,\r\n            face: Math.floor(Math.random() * 6) + 1\r\n        })\r\n\r\n        this.setState({ dicesDefence: dices })\r\n    }\r\n\r\n    handleClikcDeleteDicesAttack = () => {\r\n        if (this.state.dicesAttack.length !== 0)\r\n            this.setState({ dicesAttack: [] });\r\n    }\r\n\r\n    handleClikcDeleteDicesDefence = () => {\r\n        if (this.state.dicesDefence.length !== 0)\r\n            this.setState({ dicesDefence: [] });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"main\">\r\n                <div className=\"div-dices\">\r\n                    Кубы атаки\r\n                    <div className=\"div-attack-dice\">\r\n                        <img\r\n                            className=\"img-dice\"\r\n                            src=\"dices/yellow0.png\"\r\n                            alt=\"\"\r\n                            id=\"yellow\"\r\n                            onClick={this.handleClikcDiceAttack}\r\n                        />\r\n                        <img\r\n                            className=\"img-dice\"\r\n                            src=\"dices/blue0.png\"\r\n                            alt=\"\"\r\n                            id=\"blue\"\r\n                            onClick={this.handleClikcDiceAttack}\r\n                        />\r\n                        <img\r\n                            className=\"img-dice\"\r\n                            src=\"dices/green0.png\"\r\n                            alt=\"\"\r\n                            id=\"green\"\r\n                            onClick={this.handleClikcDiceAttack}\r\n                        />\r\n                        <img\r\n                            className=\"img-dice\"\r\n                            src=\"dices/red0.png\"\r\n                            alt=\"\"\r\n                            id=\"red\"\r\n                            onClick={this.handleClikcDiceAttack}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"div-attack-dice\">\r\n                        Пул кубов атаки\r\n                        <div className=\"div-attack-dice\">\r\n                            {\r\n                                this.state.dicesAttack.length !== 0 ?\r\n                                    this.state.dicesAttack.map((dice, index) => {\r\n                                        return <Dice color={dice.color} key={index} face={dice.face} />\r\n                                    })\r\n                                    : null\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"div-button\">\r\n                        <button onClick={this.handleClikcDeleteDicesAttack} className=\"button-delete\">Удалить кубы</button>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div className=\"div-dices\">\r\n                    Кубы защиты\r\n                    <div className=\"div-attack-dice\">\r\n                        <img\r\n                            className=\"img-dice\"\r\n                            src=\"dices/white0.png\"\r\n                            alt=\"\"\r\n                            id=\"white\"\r\n                            onClick={this.handleClikcDiceDefence}\r\n                        />\r\n                        <img\r\n                            className=\"img-dice\"\r\n                            src=\"dices/black0.png\"\r\n                            alt=\"\"\r\n                            id=\"black\"\r\n                            onClick={this.handleClikcDiceDefence}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"div-attack-dice\">\r\n                        Пул кубов защиты\r\n                        <div className=\"div-attack-dice\">\r\n                            {\r\n                                this.state.dicesDefence.length !== 0 ?\r\n                                    this.state.dicesDefence.map((dice, index) => {\r\n                                        return <Dice color={dice.color} key={index} face={dice.face} />\r\n                                    })\r\n                                    : null\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"div-button\">\r\n                        <button onClick={this.handleClikcDeleteDicesDefence} className=\"button-delete\">Удалить кубы</button>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport { Route } from 'react-router';\r\nimport { Layout } from './components/Layout/Layout';\r\nimport  Home  from './components/Home/Home';\r\n\r\nimport './custom.css'\r\n\r\nexport default class App extends Component {\r\n  static displayName = App.name;\r\n\r\n  render () {\r\n    return (\r\n      <Layout>\r\n        <Route exact path='/' component={Home} />\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.1/8 is considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport default function register () {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW (swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker (swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister () {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import 'bootstrap/dist/css/bootstrap.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nconst baseUrl = document.getElementsByTagName('base')[0].getAttribute('href');\r\nconst rootElement = document.getElementById('root');\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename={baseUrl}>\r\n    <App />\r\n  </BrowserRouter>,\r\n  rootElement);\r\n\r\nregisterServiceWorker();\r\n\r\n"],"sourceRoot":""}
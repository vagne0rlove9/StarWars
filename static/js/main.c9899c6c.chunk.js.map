{"version":3,"sources":["components/Layout/Layout.js","components/Dice/Dice.js","components/Home/Home.js","App.js","registerServiceWorker.js","index.js"],"names":["Layout","className","this","props","children","Component","displayName","name","Dice","imgPath","color","face","src","alt","Home","state","dicesAttack","dicesDefence","chubaca","chubacaCards","class","mak","makCards","gideon","gideonCards","vladCards","monsterCardStart","monsterCardRez","monsterCardOpen","round","handleClikcDiceAttack","event","dices","push","target","id","Math","floor","random","setState","handleChangeDamageChubaca","value","handleChangeDamageMak","handleChangeDamageGideon","handleClikcDiceDefence","handleClikcDeleteDicesAttack","length","handleClikcDeleteDicesDefence","handleClickHeroCardChubaca","cards","handleClickHeroCardMak","handleClickHeroCardGideon","handleClickHeroCardVlad","handleClickMonsterCardStart","handleClickMonsterCardRez","handleClickMonsterCardOpen","handleChangeRound","handleDBClickChu","handleDBClickMak","handleDBClickGid","handleDBClickMonsterStart","handleDBClickMonsterRez","handleDBClickMonsterOpen","onClick","map","dice","index","key","onChange","card","onDoubleClick","App","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","baseUrl","document","getElementsByTagName","getAttribute","rootElement","getElementById","ReactDOM","render","basename","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.c9899c6c.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Container } from 'reactstrap';\r\n\r\nexport class Layout extends Component {\r\n    static displayName = Layout.name;\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"main-container\">\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport './Dice.css'\r\n\r\nfunction Dice(props) {\r\n\r\n    const imgPath = \"dices/\" + props.color + props.face + \".png\"\r\n\r\n    return (\r\n        <img className=\"img-dice-rotate\" src={imgPath} alt=\"\"/>\r\n    );\r\n}\r\n\r\n\r\nexport default Dice;","import React, { Component } from 'react';\r\nimport './Home.css'\r\nimport Dice from '../Dice/Dice'\r\n\r\nclass Home extends Component {\r\n\r\n    state = {\r\n        dicesAttack: [],\r\n        dicesDefence: [],\r\n        chubaca: \"images/Chubaca0.png\",\r\n        chubacaCards: [{ src: \"images/ChubacaCard1.png\", class: \"img-hero-cards\" }, { src: \"images/ChubacaCard2.png\", class: \"img-hero-cards\" }, { src: \"images/ChubacaCard3.png\", class: \"img-hero-cards\" }],\r\n        mak: \"images/Mak0.png\",\r\n        makCards: [{ src: \"images/MakCard1.png\", class: \"img-hero-cards\" }, { src: \"images/MakCard2.png\", class: \"img-hero-cards\" }, { src: \"images/MakCard3.png\", class: \"img-hero-cards\" }, { src: \"images/MakCard4.png\", class: \"img-hero-cards\" }],\r\n        gideon: \"images/Gideon0.png\",\r\n        gideonCards: [{ src: \"images/GideonCard1.png\", class: \"img-hero-cards\" }, { src: \"images/GideonCard2.png\", class: \"img-hero-cards\" }, { src: \"images/GideonCard3.png\", class: \"img-hero-cards\" }],\r\n        vladCards: [{ src: \"images/vlad1.png\", class: \"img-hero-cards\" }, { src: \"images/vlad2.png\", class: \"img-hero-cards\" }, { src: \"images/vlad3.png\", class: \"img-hero-cards\" }],\r\n        monsterCardStart: [{ src: \"images/stoormpers0.png\", class: \"img-monster\" }, { src: \"images/droid0.png\", class: \"img-monster\" }],\r\n        monsterCardRez: [{ src: \"images/eweb0.png\", class: \"img-monster\" }],\r\n        monsterCardOpen: [{ src: \"images/stoormpers0.png\", class: \"img-monster\" }, { src: \"images/imperialGuards0.png\", class: \"img-monster\" }, { src: \"images/trandash0.png\", class: \"img-monster\" }],\r\n        round: 1\r\n    }\r\n\r\n    handleClikcDiceAttack = (event) => {\r\n        var dices = this.state.dicesAttack;\r\n\r\n        dices.push({\r\n            color: event.target.id,\r\n            face: Math.floor(Math.random() * 6) + 1\r\n        })\r\n\r\n        this.setState({ dicesAttack: dices })\r\n    }\r\n\r\n    handleChangeDamageChubaca = (event) => {\r\n        if (event.target.value >= 17)\r\n            this.setState({ chubaca: \"images/Chubaca1.png\" })\r\n        if (event.target.value === \"-1\")\r\n            this.setState({ chubaca: \"images/Chubaca0.png\" })\r\n    }\r\n\r\n    handleChangeDamageMak = (event) => {\r\n        if (event.target.value >= 15)\r\n            this.setState({ mak: \"images/Mak1.png\" })\r\n        if (event.target.value === \"-1\")\r\n            this.setState({ mak: \"images/Mak0.png\" })\r\n    }\r\n\r\n    handleChangeDamageGideon = (event) => {\r\n        if (event.target.value >= 13)\r\n            this.setState({ gideon: \"images/Gideon1.png\" })\r\n        if (event.target.value === \"-1\")\r\n            this.setState({ gideon: \"images/Gideon0.png\" })\r\n    }\r\n\r\n    handleClikcDiceDefence = (event) => {\r\n        var dices = this.state.dicesDefence;\r\n\r\n        dices.push({\r\n            color: event.target.id,\r\n            face: Math.floor(Math.random() * 6) + 1\r\n        })\r\n\r\n        this.setState({ dicesDefence: dices })\r\n    }\r\n\r\n    handleClikcDeleteDicesAttack = () => {\r\n        if (this.state.dicesAttack.length !== 0)\r\n            this.setState({ dicesAttack: [] });\r\n    }\r\n\r\n    handleClikcDeleteDicesDefence = () => {\r\n        if (this.state.dicesDefence.length !== 0)\r\n            this.setState({ dicesDefence: [] });\r\n    }\r\n\r\n    handleClickHeroCardChubaca = (event) => {\r\n        var cards = this.state.chubacaCards\r\n        cards[event.target.id].class += \" img-hero-card-rotate\"\r\n        this.setState({ chubacaCards: cards })\r\n    }\r\n\r\n    handleClickHeroCardMak = (event) => {\r\n        var cards = this.state.makCards\r\n        cards[event.target.id].class += \" img-hero-card-rotate\"\r\n        this.setState({ makCards: cards })\r\n    }\r\n\r\n    handleClickHeroCardGideon = (event) => {\r\n        var cards = this.state.gideonCards\r\n        cards[event.target.id].class += \" img-hero-card-rotate\"\r\n        this.setState({ gideonCards: cards })\r\n    }\r\n\r\n    handleClickHeroCardVlad = (event) => {\r\n        var cards = this.state.vladCards\r\n        cards[event.target.id].class += \" img-hero-card-rotate\"\r\n        this.setState({ vladCards: cards })\r\n    }\r\n\r\n    handleClickMonsterCardStart = (event) => {\r\n        var cards = this.state.monsterCardStart\r\n        cards[event.target.id].class += \" img-hero-card-rotate\"\r\n        this.setState({ monsterCardStart: cards })\r\n    }\r\n\r\n    handleClickMonsterCardRez = (event) => {\r\n        var cards = this.state.monsterCardRez\r\n        cards[event.target.id].class += \" img-hero-card-rotate\"\r\n        this.setState({ monsterCardRez: cards })\r\n    }\r\n\r\n    handleClickMonsterCardOpen = (event) => {\r\n        var cards = this.state.monsterCardOpen\r\n        cards[event.target.id].class += \" img-hero-card-rotate\"\r\n        this.setState({ monsterCardOpen: cards })\r\n    }\r\n\r\n    handleChangeRound = (event) => {\r\n        if (event.target.value > this.state.round) {\r\n            this.setState({\r\n                chubacaCards: [{ src: \"images/ChubacaCard1.png\", class: \"img-hero-cards\" }, { src: \"images/ChubacaCard2.png\", class: \"img-hero-cards\" }, { src: \"images/ChubacaCard3.png\", class: \"img-hero-cards\" }],\r\n                makCards: [{ src: \"images/MakCard1.png\", class: \"img-hero-cards\" }, { src: \"images/MakCard2.png\", class: \"img-hero-cards\" }, { src: \"images/MakCard3.png\", class: \"img-hero-cards\" }, { src: \"images/MakCard4.png\", class: \"img-hero-cards\" }],\r\n                gideonCards: [{ src: \"images/GideonCard1.png\", class: \"img-hero-cards\" }, { src: \"images/GideonCard2.png\", class: \"img-hero-cards\" }, { src: \"images/GideonCard3.png\", class: \"img-hero-cards\" }],\r\n                vladCards: [{ src: \"images/vlad1.png\", class: \"img-hero-cards\" }, { src: \"images/vlad2.png\", class: \"img-hero-cards\" }, { src: \"images/vlad3.png\", class: \"img-hero-cards\" }],\r\n                monsterCardStart: [{ src: \"images/stoormpers0.png\", class: \"img-monster\" }, { src: \"images/droid0.png\", class: \"img-monster\" }],\r\n                monsterCardRez: [{ src: \"images/eweb0.png\", class: \"img-monster\" }],\r\n                monsterCardOpen: [{ src: \"images/stoormpers0.png\", class: \"img-monster\" }, { src: \"images/imperialGuards0.png\", class: \"img-monster\" }, { src: \"images/trandash0.png\", class: \"img-monster\" }],\r\n            })\r\n        }\r\n        this.setState({ round: event.target.value })\r\n    }\r\n\r\n    handleDBClickChu = (event) => {\r\n        var cards = this.state.chubacaCards\r\n        cards[event.target.id].class = \"img-hero-cards-reboot\"\r\n        this.setState({ chubacaCards: cards })\r\n    }\r\n\r\n    handleDBClickMak = (event) => {\r\n        var cards = this.state.makCards\r\n        cards[event.target.id].class = \"img-hero-cards-reboot\"\r\n        this.setState({ makCards: cards })\r\n    }\r\n\r\n    handleDBClickGid = (event) => {\r\n        var cards = this.state.gideonCards\r\n        cards[event.target.id].class = \"img-hero-cards-reboot\"\r\n        this.setState({ gideonCards: cards })\r\n    }\r\n\r\n    handleDBClickMonsterStart = (event) => {\r\n        var cards = this.state.monsterCardStart\r\n        cards[event.target.id].src = \"images/back.png\"\r\n        this.setState({ monsterCardStart: cards })\r\n    }\r\n\r\n    handleDBClickMonsterRez = (event) => {\r\n        var cards = this.state.monsterCardRez\r\n        cards[event.target.id].src = \"images/back.png\"\r\n        this.setState({ monsterCardRez: cards })\r\n    }\r\n\r\n    handleDBClickMonsterOpen = (event) => {\r\n        var cards = this.state.monsterCardOpen\r\n        cards[event.target.id].src = \"images/back.png\"\r\n        this.setState({ monsterCardOpen: cards })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <img alt=\"\" src=\"images/left.png\" className=\"img-bg-left\" />\r\n                <img alt=\"\" src=\"images/right.png\" className=\"img-bg-right\" />\r\n                <div className=\"main\">\r\n                    <div className=\"div-dices\">\r\n                        Кубы атаки\r\n                    <div className=\"div-attack-dice\">\r\n                            <img\r\n                                className=\"img-dice\"\r\n                                src=\"dices/yellow0.png\"\r\n                                alt=\"\"\r\n                                id=\"yellow\"\r\n                                onClick={this.handleClikcDiceAttack}\r\n                            />\r\n                            <img\r\n                                className=\"img-dice\"\r\n                                src=\"dices/blue0.png\"\r\n                                alt=\"\"\r\n                                id=\"blue\"\r\n                                onClick={this.handleClikcDiceAttack}\r\n                            />\r\n                            <img\r\n                                className=\"img-dice\"\r\n                                src=\"dices/green0.png\"\r\n                                alt=\"\"\r\n                                id=\"green\"\r\n                                onClick={this.handleClikcDiceAttack}\r\n                            />\r\n                            <img\r\n                                className=\"img-dice\"\r\n                                src=\"dices/red0.png\"\r\n                                alt=\"\"\r\n                                id=\"red\"\r\n                                onClick={this.handleClikcDiceAttack}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"div-attack-dice\">\r\n                            Пул кубов атаки\r\n                        <div className=\"div-attack-dice\">\r\n                                {\r\n                                    this.state.dicesAttack.length !== 0 ?\r\n                                        this.state.dicesAttack.map((dice, index) => {\r\n                                            return <Dice color={dice.color} key={index} face={dice.face} />\r\n                                        })\r\n                                        : null\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"div-button\">\r\n                            <button onClick={this.handleClikcDeleteDicesAttack} className=\"button-delete\">Удалить кубы</button>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"div-dices\">\r\n                        Кубы защиты\r\n                    <div className=\"div-attack-dice\">\r\n                            <img\r\n                                className=\"img-dice\"\r\n                                src=\"dices/white0.png\"\r\n                                alt=\"\"\r\n                                id=\"white\"\r\n                                onClick={this.handleClikcDiceDefence}\r\n                            />\r\n                            <img\r\n                                className=\"img-dice\"\r\n                                src=\"dices/black0.png\"\r\n                                alt=\"\"\r\n                                id=\"black\"\r\n                                onClick={this.handleClikcDiceDefence}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"div-attack-dice\">\r\n                            Пул кубов защиты\r\n                        <div className=\"div-attack-dice\">\r\n                                {\r\n                                    this.state.dicesDefence.length !== 0 ?\r\n                                        this.state.dicesDefence.map((dice, index) => {\r\n                                            return <Dice color={dice.color} key={index} face={dice.face} />\r\n                                        })\r\n                                        : null\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"div-button\">\r\n                            <button onClick={this.handleClikcDeleteDicesDefence} className=\"button-delete\">Удалить кубы</button>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n                <div className=\"div-heros\">\r\n                    <div className=\"div-hero\">\r\n                        <img alt=\"\" src={this.state.chubaca} className=\"img-hero\" />\r\n                        <label className=\"label\">Число активаций\r\n\t\t\t\t            <select>\r\n                                <option>2</option>\r\n                                <option>1</option>\r\n                                <option>0</option>\r\n                            </select>\r\n                        </label>\r\n                        <label className=\"label\">Число ран\r\n\t\t\t\t    <input onChange={this.handleChangeDamageChubaca} />\r\n                        </label>\r\n                        <label className=\"label\">Число усталости\r\n\t\t\t\t    <input />\r\n                        </label>\r\n                        <div>\r\n                            {\r\n                                this.state.chubacaCards.map((card, index) => {\r\n                                    return <img alt=\"\" onDoubleClick={this.handleDBClickChu} onClick={this.handleClickHeroCardChubaca} id={index} key={index} src={card.src} className={card.class} />\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"div-heros\">\r\n                    <div className=\"div-hero\">\r\n                        <img alt=\"\" src={this.state.mak} className=\"img-hero\" />\r\n                        <label className=\"label\">Число активаций\r\n\t\t\t\t            <select>\r\n                                <option>2</option>\r\n                                <option>1</option>\r\n                                <option>0</option>\r\n                            </select>\r\n                        </label>\r\n                        <label className=\"label\">Число ран\r\n\t\t\t\t    <input onChange={this.handleChangeDamageMak} />\r\n                        </label>\r\n                        <label className=\"label\">Число усталости\r\n\t\t\t\t    <input />\r\n                        </label>\r\n                        <div>\r\n                            {\r\n                                this.state.makCards.map((card, index) => {\r\n                                    return <img alt=\"\" onDoubleClick={this.handleDBClickMak} onClick={this.handleClickHeroCardMak} id={index} key={index} src={card.src} className={card.class} />\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"div-heros\">\r\n                    <div className=\"div-hero\">\r\n                        <img alt=\"\" src={this.state.gideon} className=\"img-hero\" />\r\n                        <label className=\"label\">Число активаций\r\n\t\t\t\t            <select>\r\n                                <option>2</option>\r\n                                <option>1</option>\r\n                                <option>0</option>\r\n                            </select>\r\n                        </label>\r\n                        <label className=\"label\">Число ран\r\n\t\t\t\t    <input onChange={this.handleChangeDamageGideon} />\r\n                        </label>\r\n                        <label className=\"label\">Число усталости\r\n\t\t\t\t    <input />\r\n                        </label>\r\n                        <div>\r\n                            {\r\n                                this.state.gideonCards.map((card, index) => {\r\n                                    return <img alt=\"\" onDoubleClick={this.handleDBClickGid} onClick={this.handleClickHeroCardGideon} id={index} key={index} src={card.src} className={card.class} />\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"div-heros\">\r\n                    <div className=\"div-hero\">\r\n                        <label className=\"label\">\r\n                            Раунд\r\n                            <input value={this.state.round} onChange={this.handleChangeRound} />\r\n                        </label>\r\n                        <label className=\"label\">\r\n                            Угроза\r\n                            <input />\r\n                        </label>\r\n                        <div>\r\n                            {\r\n                                this.state.vladCards.map((card, index) => {\r\n                                    return <img alt=\"\" onClick={this.handleClickHeroCardVlad} id={index} key={index} src={card.src} className={card.class} />\r\n                                })\r\n                            }\r\n                        </div>\r\n                        <label className=\"label\">Начальные группы</label>\r\n                        <div>\r\n                            {\r\n                                this.state.monsterCardStart.map((card, index) => {\r\n                                    return <img alt=\"\" src={card.src} key={index} id={index} onClick={this.handleClickMonsterCardStart} onDoubleClick={this.handleDBClickMonsterStart} className={card.class} />\r\n                                })\r\n                            }\r\n                        </div>\r\n                        <label className=\"label\">Резервные группы</label>\r\n                        <div>\r\n                            {\r\n                                this.state.monsterCardRez.map((card, index) => {\r\n                                    return <img alt=\"\" src={card.src} key={index} id={index} onClick={this.handleClickMonsterCardRez} onDoubleClick={this.handleDBClickMonsterRez} className={card.class} />\r\n                                })\r\n                            }\r\n                        </div>\r\n                        <label className=\"label\">Открытые группы</label>\r\n                        <div>\r\n\r\n                            {\r\n                                this.state.monsterCardOpen.map((card, index) => {\r\n                                    return <img alt=\"\" src={card.src} key={index} id={index} onClick={this.handleClickMonsterCardOpen} onDoubleClick={this.handleDBClickMonsterOpen} className={card.class} />\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport { Route } from 'react-router';\r\nimport { Layout } from './components/Layout/Layout';\r\nimport  Home  from './components/Home/Home';\r\n\r\nimport './custom.css'\r\n\r\nexport default class App extends Component {\r\n  static displayName = App.name;\r\n\r\n  render () {\r\n    return (\r\n      <Layout>\r\n        <Route exact path='/' component={Home} />\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.1/8 is considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport default function register () {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW (swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker (swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister () {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import 'bootstrap/dist/css/bootstrap.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nconst baseUrl = document.getElementsByTagName('base')[0].getAttribute('href');\r\nconst rootElement = document.getElementById('root');\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename={baseUrl}>\r\n    <App />\r\n  </BrowserRouter>,\r\n  rootElement);\r\n\r\nregisterServiceWorker();\r\n\r\n"],"sourceRoot":""}